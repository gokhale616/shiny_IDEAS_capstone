geom_bar(aes(fill = type)) +
facet_grid(~Group)
dat2 %>%
filter(Group!="primates") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type)) +
facet_grid(Group ~ .)
dat2 %>%
filter(Group!="primates") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type)) +
facet_grid(Group ~ ., scales="free")
head(dat2)
dat2 %>%
filter(Group!="primates") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type)) +
facet_grid(Group ~ continent, scales="free")
dat2 %>%
filter(Group!="primates", continent !="Antarctica") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type)) +
facet_grid(Group ~ continent, scales="free")
dat2 %>%
filter(Group!="primates", continent !="Antarctica") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type, position="fill", stat="identity")) +
facet_grid(Group ~ continent, scales="free")
dat2 %>%
filter(Group!="primates", continent !="Antarctica") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type, stat="identity")) +
scale_y_continuous(labels = scales::percent_format()) +
facet_grid(Group ~ continent, scales="free")
getwd()
##############################################################################################################
######################################## setting working directory ###########################################
##############################################################################################################
setwd("~/Desktop/shiny_IDEAS_capstone/data")
##############################################################################################################
######################################## loading packages ####################################################
##############################################################################################################
packages <- c("tidyverse", "readxl", "Hmisc", "sp", "rworldmap")
lapply(packages, library, character.only = TRUE)
install.packages("Hmisc")
rm(packages)
sheet_names1 <- excel_sheets(path = "ThreatPSRSoniaAmy2005.xlsx")
threat_data <- read_excel(path = "ThreatPSRSoniaAmy2005.xlsx", sheet = sheet_names1[1])
#extract the MSW binomial name from threat data to join variables from the GMPD
threat_data %>%
select(`MSW Binomial`) %>%
unique() -> mammal_names
# dealing with the GMPD file to extract information on other variables ---------------------------------------
features_of_interest <- c("HostCorrectedName", "Group", "HostFamily",
"Longitude", "Latitude",
"PopulationType")
gmpd <- read_csv(file = "GMPD_main.csv")
#getting rid of all rows where either Longitude or Latitude was NA and selecting the features of interest
gmpd %>%
filter(is.na(Longitude) == FALSE & is.na(Latitude) == FALSE) %>%
filter(HostCorrectedName %in% mammal_names$`MSW Binomial`)  %>%
select(features_of_interest) -> gmpd_subset
# Function to convert coordinates to country and continent name
coords2globe <- function(longitude_v, latitude_v) {
# get the world map
countriesSP <- getMap(resolution = "low")
# gereate a data_frame of longitude and latitude
points <- tibble(longitude = longitude_v,
latitude = latitude_v)
# setting CRS directly to that from rworldmap
pointsSP <- SpatialPoints(points, proj4string = CRS(proj4string(countriesSP)))
# use 'over' to get indices of the Polygons object containing each point
indices = over(pointsSP, countriesSP)
# generate either the country or continent name from these variables
globe_r <- tibble(country = indices$ADMIN, continent = indices$REGION)
return(globe_r)
}
#defining a tibble of countries and continents
countries_continents <- coords2globe(longitude_v = gmpd_subset$Longitude, latitude_v = gmpd_subset$Latitude)
#adding the columns of countries and continents to the gmpd_subset
gmpd_subset_cc <- bind_cols(gmpd_subset, countries_continents)
lapply(packages, library, character.only = TRUE)
packages <- c("tidyverse", "readxl", "Hmisc", "sp", "rworldmap")
lapply(packages, library, character.only = TRUE)
rm(packages)
install.packages("rworldmap")
install.packages("fields")
library(tidyverse)
library(magrittr)
dat <- read.csv("./data/shiny_data.csv")
library(tidyverse)
library(magrittr)
dat <- read.csv("./data/shiny_data.csv")
dat <- read.csv("./data/shiny_data.csv")
getwd()
setwd("~/Desktop/shiny_IDEAS_capstone")
library(tidyverse)
library(magrittr)
dat <- read.csv("./data/shiny_data.csv")
# summary of threat variable
table(dat$Threat)
table(dat$ThreatDic)
table(dat$ThreatDic2)
# summary of group
table(dat$Group)
# summary of group x threat
dat %>%
group_by(Group, ThreatDis, ThreatDic) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
dat %>%
filter(ThreatDic==0, ThreatDis==0) %>%
mutate(type="NonThreatened") -> dfNon
dat %>%
filter(ThreatDic==1, ThreatDis==0) %>%
mutate(type="ThreatOther") -> dfT
dat %>%
filter(ThreatDic==1, ThreatDis==1) %>%
mutate(type="ThreatDisease") -> dfD
dat2 <- bind_rows(dfNon, dfT, dfD)
dat2 %>% group_by(Group, type) %>%
tally()
dat %>% group_by(Group) %>% tally()
dat %>% filter(Group!="primates")
dat %<>% filter(Group!="primates")  # just for now bc disease is missing
# summary of threat variable
table(dat$Threat)
table(dat$ThreatDic)
library(tidyverse)
library(magrittr)
dat <- read.csv("./data/shiny_data.csv")
dat %<>% filter(Group!="primates")  # just for now bc disease is missing
# summary of threat variable
table(dat$Threat)
table(dat$ThreatDic)
table(dat$ThreatDic2)
# summary of group
table(dat$Group)
# summary of group x threat
dat %>%
group_by(Group, ThreatDis, ThreatDic) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
# summary of group x threat
dat %>%
group_by(Group, ThreatDic, ThreatDis) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
# summary of group x threat
dat %>%
group_by(Group, ThreatDic2, ThreatDis) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
filter(ThreatDic==0, ThreatDis==0) %>%
mutate(type="NonThreatened") -> dfNon
dat %>%
filter(ThreatDic==1, ThreatDis==0) %>%
mutate(type="ThreatOther") -> dfT
dat %>%
filter(ThreatDic==1, ThreatDis==1) %>%
mutate(type="ThreatDisease") -> dfD
dat2 <- bind_rows(dfNon, dfT, dfD)
dat2 %>% group_by(Group, type) %>%
tally()
dat %>% group_by(Group) %>% tally()
dat %>% filter(!is.na(ThreatDic), !is.na(ThreatDis)) %>% group_by(Group) %>% tally()
dat %>% filter(!is.na(ThreatDic),
!is.na(ThreatDis)) %>%
group_by(Group) %>%
tally()
dat %>%
group_by(Group) %>%
tally()
6123+850
any(table(dat$HostCorrectedName)>1)
any(table(dat$HostCorrectedName)>2)
length(unique(dat$HostCorrectedName))
nrow(data)
nrow(dat)
dat <- read.csv("./data/shiny_data.csv")
dat %<>% filter(Group!="primates")  # just for now bc disease is missing
dat %<>% distinct(HostCorrectedName)
# summary of threat variable
table(dat$Threat)
table(dat$ThreatDic)
head(dat)
dat %<>% distinct(HostCorrectedName, .keep_all = TRUE)
dat <- read.csv("./data/shiny_data.csv")
dat %<>% filter(Group!="primates")  # just for now bc disease is missing
dat %<>% distinct(HostCorrectedName, .keep_all = TRUE)
# summary of threat variable
table(dat$Threat)
table(dat$ThreatDic)
table(dat$ThreatDic2)
# summary of group
table(dat$Group)
dat <- read.csv("./data/shiny_data.csv")
dat %<>% distinct(HostCorrectedName, .keep_all = TRUE)
# summary of threat variable
table(dat$Threat)
table(dat$ThreatDic)
table(dat$ThreatDic2)
# summary of group
table(dat$Group)
# summary of group x threat
dat %>%
group_by(Group, ThreatDic2, ThreatDis) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
library(tidyverse)
library(magrittr)
dat <- read.csv("./data/shiny_data.csv")
dat %<>% filter(Group!="primates")  # just for now bc disease is missing
dat %<>% distinct(HostCorrectedName, .keep_all = TRUE)
# summary of threat variable
table(dat$Threat)
table(dat$ThreatDic)
table(dat$ThreatDic2)
# summary of group
table(dat$Group)
# summary of group x threat
dat %>%
group_by(Group, ThreatDic2, ThreatDis) %>%
summarise (n = n()) %>%
mutate(freq = n / sum(n))
dat %>%
filter(ThreatDic==0, ThreatDis==0) %>%
mutate(type="NonThreatened") -> dfNon
dat %>%
filter(ThreatDic==1, ThreatDis==0) %>%
mutate(type="ThreatOther") -> dfT
dat %>%
filter(ThreatDic==1, ThreatDis==1) %>%
mutate(type="ThreatDisease") -> dfD
dat2 <- bind_rows(dfNon, dfT, dfD)
dat2 %>% group_by(Group, type) %>%
tally()
dat %>%
group_by(Group) %>%
tally()
dat2 %>%
filter(continent !="Antarctica") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type, stat="identity")) +
scale_y_continuous(labels = scales::percent_format()) +
facet_grid(Group ~ continent, scales="free")
dat2 %>%
filter(continent !="Antarctica") %>%
ggplot(aes(HostFamily)) +
geom_bar(aes(fill = type, stat="identity")) +
facet_grid(Group ~ continent, scales="free")
dat %>%
group_by(Group) %>%
tally()
dat2
str(dat2)
table(dat2$type)
nrow(dat2)
sum(table(dat2$type))
dat2 %>%
group_by(Group, type) %>%
tally()
table(dat2$Group)
sum(table(dat2$Group))
dat2 %>%
group_by(Group, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=Group)) + geom_bar(stat="identity")
dat2 %>%
group_by(Group, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=Group)) + geom_bar(stat="identity", position = "fill")
dat %>%
filter(ThreatDic==0, ThreatDis==0) %>%
mutate(type="NonThreatened") -> dfNon
dat %>%
filter(ThreatDic==1, ThreatDis==0) %>%
mutate(type="ThreatOther") -> dfT
dat %>%
filter(ThreatDic==1, ThreatDis==1) %>%
mutate(type="ThreatDisease") -> dfTD
dat %>%
filter(ThreatDic==1, ThreatDis==1) %>%
mutate(type="Disease") -> dfD
dat2 <- bind_rows(dfNon, dfT, dfTD, dfD)
dat2 %>% group_by(Group, type) %>%
tally()
dat %>%
group_by(Group) %>%
tally()
dat2 %>%
group_by(Group, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=Group)) +
geom_bar(stat="identity", position = "fill")
dat2 %>%
group_by(Group, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=Group)) +
geom_bar(stat="identity", position = "fill") + labs(y="")
dat2 %>%
group_by(Group, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=Group)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")
dat2
dat2 %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=Group)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="") + facet_grid(.~Group)
dat2 %>%
group_by(hostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=hostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="") + facet_grid(.~Group)
dat2 %>%
group_by(hostFamily, type) %>%
tally()
dat2 %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="") + facet_grid(.~Group)
head(dat2)
dat2 %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="") + facet_grid(Group ~ .)
dat2 %>%
group_by(HostFamily, type) %>%
tally()
dat2 %>%
group_by(HostFamily, Group, type) %>%
tally()
dat2 %>%
group_by(HostFamily, Group, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="") + facet_grid(Group ~ .)
dat2 %>%
group_by(HostFamily, Group, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="") + facet_grid(Group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dat2 %>%
filter(Group="carnivores") %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dat2 %>%
filter(Group="carnivores") %>%
group_by(HostFamily, type) %>%
tally()
dat2 %>%
filter(Group=="carnivores") %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dat2 %>%
filter(Group=="ungulates") %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
unique(dat2$continent)
# filter by continent
dat2 %>%
filter(continent=="North America") %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dat2 %>%
filter(continent=="Africa") %>%
group_by(HostFamily, type) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
colnames(dat2)
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<50, 0, 1))
# filter by mass
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<50, 0, 1)) %>%
group_by(massKG, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=HostFamily)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(.~Group) %>%
theme(axis.text.x = element_text(angle = 90, hjust = 1))
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<50, 0, 1)) %>%
group_by(mass2, type, Group) %>%
tally()
# filter by mass
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<50, 0, 1)) %>%
group_by(mass2, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=mass2)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(.~Group) %>%
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# filter by mass
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<50, 0, 1)) %>%
group_by(mass2, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=mass2)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(.~Group) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# filter by mass
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<50, 0, 1)) %>%
group_by(mass2, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=mass2)) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(Group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# filter by mass
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<50, 0, 1)) %>%
group_by(mass2, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=factor(mass2))) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(Group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# filter by mass
dat2 %>%
filter(!is.na(massKG)) %>%
mutate(mass2=ifelse(massKG<75, 0, 1)) %>%
group_by(mass2, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=factor(mass2))) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(Group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
colnames(dat)
colnames(dat2)
range(dat2$hostHomeRange)
range(dat2$hostHomeRange, na.rm=TRUE)
# filter by home range
dat2 %>%
filter(!is.na(hostHomeRange)) %>%
mutate(range2 = ifelse(hostHomeRange < 75, 0, 1)) %>%
group_by(hostHomeRange) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=factor(mass2))) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(Group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# filter by home range
dat2 %>%
filter(!is.na(hostHomeRange)) %>%
mutate(range2 = ifelse(hostHomeRange < 75, 0, 1)) %>%
group_by(range2, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=factor(mass2))) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(Group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
# filter by home range
dat2 %>%
filter(!is.na(hostHomeRange)) %>%
mutate(range2 = ifelse(hostHomeRange < 75, 0, 1)) %>%
group_by(range2, type, Group) %>%
tally() %>%
ggplot(aes(fill=type, y=n, x=factor(range2))) +
geom_bar(stat="identity", position = "fill") +
labs(y="", fill="")  +
facet_grid(Group ~ .) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
